#+TITLE: gegede - General Geometry Description

* What is this?

The General Geometry Description (GGD) is a software system to generate a description of a [[http://en.wikipedia.org/wiki/Constructive_solid_geometry][constructive solid geometry]] specifically as used by [[http://geant4.web.cern.ch/geant4/G4UsersDocuments/UsersGuides/ForApplicationDeveloper/html/Detector/geometry.html][Geant4]] or [[http://root.cern.ch/root/html534/guides/users-guide/Geometry.html][ROOT]] applications are as represented in [[http://cern.ch/gdml][GDML]] files.  It is implemented as a pure Python module =gegede=.  It relies on [[https://github.com/hgrecco/pint][Pint]] for units and [[http://lxml.de/][lxml]] for emitting XML for GDML.  For running the tests you will need [[https://nose.readthedocs.org][nose]] or a similar unit test runner.

* How do I use it?

GGD is designed along layers each of which allows the user-programmer access.

#+BEGIN_SRC dot :cmd dot :cmdline -Tpng :file highlevel.png :exports results 
  # note: github exposes this, ignore it
  digraph "highlevel" {
    rankdir=LR;
    params -> builders;
    builders -> objects;
    objects -> export;
  }
#+END_SRC

#+RESULTS:
[[file:highlevel.png]]

- params :: high level, human-centric configuration mechanism
- builders :: structured, procedural geometry constructor code 
- objects :: the in-memory representation of the final geometry
- export :: conversion to formats suitable to exchange the data with other applications.

At the highest level is a simple configuration language for end-user setting of parameters that are consumed by the next layer, the builders.  The builders are instances of classes which are responsible for constructing some portion of an overall geometry.  They may also manage some number of other (sub)builders to handle specific construction details.  The geometry is constructed by building an in-memory representation of general geometry objects.  Finally these objects may be exported into a number of forms including GDML, "plain old (Python) data" and JSON.  Each layer provides for extension to novel uses.

* Tutorial

Each layer contains a tutorial:

- [[./doc/configuration.org][Configuration]]
- [[./doc/builders.org][Builders]]
- [[./doc/construction.org][Construction]]
- [[./doc/exporting.org][Exporting]]

* Reference

T.B.D.

* Installation

GGD can be installed in the usual "Python way":

#+BEGIN_EXAMPLE
  python setup.py install
#+END_EXAMPLE

* Development

To set up for building and testing GGD "in source":

#+BEGIN_EXAMPLE
  virtualenv venv
  source venv/bin/activate
  python setup.py develop
#+END_EXAMPLE

The tests are meant to be run via [[https://nose.readthedocs.org][nose]]:

#+BEGIN_EXAMPLE
  pip install nose
  nosetests
#+END_EXAMPLE
